/* :root.light {
    --unchecked-bg: rgb(193, 206, 236);
    --unchecked-h2-bg: rgb(169, 243, 243);
    --color: black;
    --description-p: rgb(233, 241, 227);
}

:root.dark {
    --unchecked-bg: rgb(57, 81, 136);
    --unchecked-h2-bg: rgb(7, 21, 46);
    --color: azure;
    --description-p: rgb(21, 23, 70);
} */

/* 
    I need one set of colors for when the theme is set to dark, and another for when it's set to light. But then, how will I handle
    when the todo is checked/unchecked? I can set up colors for when it's light and for when it's dark, but how about when it's light 
    and checked, or dark and checked? How do I differentiate on those cases?
    I will probably have to use javaScript.

*/

:root.light {
    --thing-bg: rgb(193, 206, 236);
    --thing-h2-bg: rgb(169, 243, 243);
    --color: black;
    --description-p: rgb(233, 241, 227);
    --checked-thing-bg: rgb(187, 199, 207);
    --checked-description-p: azure;
}

:root.dark {
    --thing-bg: rgb(57, 81, 136);
    --thing-h2-bg: rgb(7, 21, 46);
    --color: azure; 
    --description-p: rgb(21, 23, 70);
    --checked-thing-bg: rgb(130, 148, 160);
    --checked-description-p: rgb(232, 210, 210);
}

/* 
    I think I should use general sibling combinator to change the color of the thing when it's checked, depending on the
    theme.
*/

.todo-container {
    position: relative;
    padding-top: 100px;
}

.todos {
    position: relative;
}

.todo {
    margin: 20px auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    width: 700px;
    text-align: center;
    padding: 10px;
    border-radius: 5px;
}

.todo h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
    padding: 5px;
    border-radius: 5px;
    max-width: 500px;
}

.todo input[type="text"] {
    background: azure;
    font-size: 1.5rem;
    margin-bottom: 10px;
    padding: 5px;
    border-radius: 5px;
    max-width: 500px;
    text-align: center;
}

.todo textarea, .todo p {
    width: 600px;
    padding: 5px;
    border-radius: 5px;
    border: none;
    margin-bottom: 20px;
}

.todo p {
    min-height: 3rem;
    text-align: start;
    overflow-wrap: break-word;
    color: var(--color);
}

.todo textarea {
    resize: vertical;
    overflow: auto;
}

.todo .controls {
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 10px;
}

.todo .controls button {
    width: 30px;
    height: 30px;
    border: none;
    background-color: transparent;
    background-image: url("images/rubbish-bin.png");
    background-size: cover;
    border-radius: 5px;
}

.todo .controls button:hover {
    background-color: rgb(255, 132, 110);
}

.todo .controls button:active {
    background-color: rgb(236, 105, 96);
    transform: scale(.975);
}

.todo .controls input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: nobe;
    align-self: center;
    border-radius: 5px;
    width: 20px;
    height: 20px;
    border: 1px dotted red;
    background: rgb(255, 250, 250);
}

.todo .controls input[type="checkbox"]:checked {
    background: rgb(31, 233, 13);
}

.todo .controls input[type="checkbox"]:checked::after {
    content: url("images/checkmark.png");
}

.todo .controls .check-wrapper {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 1.25rem;
}

.unchecked p {
    background: var(--description-p);
}

.checked p {
    background: var(--checked-description-p);
    color: black;
}

/* ... */

.unchecked {
    background: var(--thing-bg);
}

.unchecked h2 {
    background: var(--thing-h2-bg);
    color: var(--color);
}

.unchecked textarea {
    background: var(--description-p);
    color: var(--color);
}

/* ... */

.checked {
    background: var(--checked-thing-bg);
}

.checked h2 {
    background: rgb(153, 171, 173);
    text-decoration: line-through;
}

.checked textarea {
    background: azure;
}

@media screen and (max-width: 700px) {
    .todo-container {
        padding-top: 60px;
    }

    .todo {
        width: 300px;
    }

    .todo h2 {
        max-width: 200px;
        font-size: 1.25rem;
    }

    .todo input[type="text"] {
        max-width: 200px;
    }

    .todo textarea, .todo p {
        width: 250px;
        min-height: 4rem; 
    }
}